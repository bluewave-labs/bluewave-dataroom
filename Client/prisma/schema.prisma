generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ArchivedUser {
  id           Int  @id @default(autoincrement())
  user_id      String   @unique @default(cuid()) // auto generate unique user_id
  name         String   @default("")
  email        String   @unique @default("")
  password     String
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  role         UserRole @default(USER)
  address      String?  @default("")
}

model PasswordResetToken {
  id         Int       @id @default(autoincrement())
  token      String    @unique
  created_at DateTime  @default(now())
  reset_at   DateTime?
  user_id    String
  User       User      @relation(fields: [user_id], references: [user_id])
}

model User {
  id                 Int               @id @default(autoincrement())
  user_id            String               @unique
  name               String               @default("")
  email              String               @unique @default("")
  password           String
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  role               UserRole             @default(USER)
  Status             Status               @default(ACTIVE)
  PasswordResetToken PasswordResetToken[]
  Document           Document[]
}

model Document {
  id          Int      @id @default(autoincrement())
  document_id String   @unique @default(cuid())
  user_id     String
  fileName    String
  filePath    String
  fileType    String
  size        Int
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime @updatedAt @db.Timestamptz(6)
  User        User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

enum Status {
  ACTIVE
  ARCHIVED
}

enum UserRole {
  ADMIN
  COACH
  CLIENT
  USER
}


